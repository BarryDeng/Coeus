#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="database")]
public partial class UserInfoDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertAspNetUsers(AspNetUsers instance);
  partial void UpdateAspNetUsers(AspNetUsers instance);
  partial void DeleteAspNetUsers(AspNetUsers instance);
  partial void InsertMessage(Message instance);
  partial void UpdateMessage(Message instance);
  partial void DeleteMessage(Message instance);
  partial void Insertfileupload(fileupload instance);
  partial void Updatefileupload(fileupload instance);
  partial void Deletefileupload(fileupload instance);
  partial void InsertPhotos(Photos instance);
  partial void UpdatePhotos(Photos instance);
  partial void DeletePhotos(Photos instance);
  #endregion
	
	public UserInfoDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["databaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public UserInfoDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public UserInfoDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public UserInfoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public UserInfoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<AspNetUsers> AspNetUsers
	{
		get
		{
			return this.GetTable<AspNetUsers>();
		}
	}
	
	public System.Data.Linq.Table<Message> Message
	{
		get
		{
			return this.GetTable<Message>();
		}
	}
	
	public System.Data.Linq.Table<fileupload> fileupload
	{
		get
		{
			return this.GetTable<fileupload>();
		}
	}
	
	public System.Data.Linq.Table<Photos> Photos
	{
		get
		{
			return this.GetTable<Photos>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
public partial class AspNetUsers : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Id;
	
	private string _Class;
	
	private string _role;
	
	private string _motto;
	
	private string _Email;
	
	private bool _EmailConfirmed;
	
	private string _PasswordHash;
	
	private string _SecurityStamp;
	
	private string _PhoneNumber;
	
	private bool _PhoneNumberConfirmed;
	
	private bool _TwoFactorEnabled;
	
	private System.Nullable<System.DateTime> _LockoutEndDateUtc;
	
	private bool _LockoutEnabled;
	
	private int _AccessFailedCount;
	
	private string _UserName;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void OnmottoChanging(string value);
    partial void OnmottoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
	
	public AspNetUsers()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(MAX)")]
	public string Class
	{
		get
		{
			return this._Class;
		}
		set
		{
			if ((this._Class != value))
			{
				this.OnClassChanging(value);
				this.SendPropertyChanging();
				this._Class = value;
				this.SendPropertyChanged("Class");
				this.OnClassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="NVarChar(MAX)")]
	public string role
	{
		get
		{
			return this._role;
		}
		set
		{
			if ((this._role != value))
			{
				this.OnroleChanging(value);
				this.SendPropertyChanging();
				this._role = value;
				this.SendPropertyChanged("role");
				this.OnroleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motto", DbType="NVarChar(MAX)")]
	public string motto
	{
		get
		{
			return this._motto;
		}
		set
		{
			if ((this._motto != value))
			{
				this.OnmottoChanging(value);
				this.SendPropertyChanging();
				this._motto = value;
				this.SendPropertyChanged("motto");
				this.OnmottoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
	public bool EmailConfirmed
	{
		get
		{
			return this._EmailConfirmed;
		}
		set
		{
			if ((this._EmailConfirmed != value))
			{
				this.OnEmailConfirmedChanging(value);
				this.SendPropertyChanging();
				this._EmailConfirmed = value;
				this.SendPropertyChanged("EmailConfirmed");
				this.OnEmailConfirmedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
	public string PasswordHash
	{
		get
		{
			return this._PasswordHash;
		}
		set
		{
			if ((this._PasswordHash != value))
			{
				this.OnPasswordHashChanging(value);
				this.SendPropertyChanging();
				this._PasswordHash = value;
				this.SendPropertyChanged("PasswordHash");
				this.OnPasswordHashChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
	public string SecurityStamp
	{
		get
		{
			return this._SecurityStamp;
		}
		set
		{
			if ((this._SecurityStamp != value))
			{
				this.OnSecurityStampChanging(value);
				this.SendPropertyChanging();
				this._SecurityStamp = value;
				this.SendPropertyChanged("SecurityStamp");
				this.OnSecurityStampChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
	public string PhoneNumber
	{
		get
		{
			return this._PhoneNumber;
		}
		set
		{
			if ((this._PhoneNumber != value))
			{
				this.OnPhoneNumberChanging(value);
				this.SendPropertyChanging();
				this._PhoneNumber = value;
				this.SendPropertyChanged("PhoneNumber");
				this.OnPhoneNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
	public bool PhoneNumberConfirmed
	{
		get
		{
			return this._PhoneNumberConfirmed;
		}
		set
		{
			if ((this._PhoneNumberConfirmed != value))
			{
				this.OnPhoneNumberConfirmedChanging(value);
				this.SendPropertyChanging();
				this._PhoneNumberConfirmed = value;
				this.SendPropertyChanged("PhoneNumberConfirmed");
				this.OnPhoneNumberConfirmedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
	public bool TwoFactorEnabled
	{
		get
		{
			return this._TwoFactorEnabled;
		}
		set
		{
			if ((this._TwoFactorEnabled != value))
			{
				this.OnTwoFactorEnabledChanging(value);
				this.SendPropertyChanging();
				this._TwoFactorEnabled = value;
				this.SendPropertyChanged("TwoFactorEnabled");
				this.OnTwoFactorEnabledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
	public System.Nullable<System.DateTime> LockoutEndDateUtc
	{
		get
		{
			return this._LockoutEndDateUtc;
		}
		set
		{
			if ((this._LockoutEndDateUtc != value))
			{
				this.OnLockoutEndDateUtcChanging(value);
				this.SendPropertyChanging();
				this._LockoutEndDateUtc = value;
				this.SendPropertyChanged("LockoutEndDateUtc");
				this.OnLockoutEndDateUtcChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
	public bool LockoutEnabled
	{
		get
		{
			return this._LockoutEnabled;
		}
		set
		{
			if ((this._LockoutEnabled != value))
			{
				this.OnLockoutEnabledChanging(value);
				this.SendPropertyChanging();
				this._LockoutEnabled = value;
				this.SendPropertyChanged("LockoutEnabled");
				this.OnLockoutEnabledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
	public int AccessFailedCount
	{
		get
		{
			return this._AccessFailedCount;
		}
		set
		{
			if ((this._AccessFailedCount != value))
			{
				this.OnAccessFailedCountChanging(value);
				this.SendPropertyChanging();
				this._AccessFailedCount = value;
				this.SendPropertyChanged("AccessFailedCount");
				this.OnAccessFailedCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Message")]
public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _class;
	
	private string _writer;
	
	private string _title;
	
	private string _content;
	
	private bool _isIm;
	
	private string _datetime;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnclassChanging(string value);
    partial void OnclassChanged();
    partial void OnwriterChanging(string value);
    partial void OnwriterChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnisImChanging(bool value);
    partial void OnisImChanged();
    partial void OndatetimeChanging(string value);
    partial void OndatetimeChanged();
    #endregion
	
	public Message()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_class", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string @class
	{
		get
		{
			return this._class;
		}
		set
		{
			if ((this._class != value))
			{
				this.OnclassChanging(value);
				this.SendPropertyChanging();
				this._class = value;
				this.SendPropertyChanged("@class");
				this.OnclassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_writer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string writer
	{
		get
		{
			return this._writer;
		}
		set
		{
			if ((this._writer != value))
			{
				this.OnwriterChanging(value);
				this.SendPropertyChanging();
				this._writer = value;
				this.SendPropertyChanged("writer");
				this.OnwriterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string content
	{
		get
		{
			return this._content;
		}
		set
		{
			if ((this._content != value))
			{
				this.OncontentChanging(value);
				this.SendPropertyChanging();
				this._content = value;
				this.SendPropertyChanged("content");
				this.OncontentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isIm", DbType="Bit NOT NULL")]
	public bool isIm
	{
		get
		{
			return this._isIm;
		}
		set
		{
			if ((this._isIm != value))
			{
				this.OnisImChanging(value);
				this.SendPropertyChanging();
				this._isIm = value;
				this.SendPropertyChanged("isIm");
				this.OnisImChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string datetime
	{
		get
		{
			return this._datetime;
		}
		set
		{
			if ((this._datetime != value))
			{
				this.OndatetimeChanging(value);
				this.SendPropertyChanging();
				this._datetime = value;
				this.SendPropertyChanged("datetime");
				this.OndatetimeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.fileupload")]
public partial class fileupload : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _class;
	
	private string _name;
	
	private string _fname;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnclassChanging(string value);
    partial void OnclassChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    #endregion
	
	public fileupload()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_class", DbType="Char(7) NOT NULL", CanBeNull=false)]
	public string @class
	{
		get
		{
			return this._class;
		}
		set
		{
			if ((this._class != value))
			{
				this.OnclassChanging(value);
				this.SendPropertyChanging();
				this._class = value;
				this.SendPropertyChanged("@class");
				this.OnclassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string fname
	{
		get
		{
			return this._fname;
		}
		set
		{
			if ((this._fname != value))
			{
				this.OnfnameChanging(value);
				this.SendPropertyChanging();
				this._fname = value;
				this.SendPropertyChanged("fname");
				this.OnfnameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Photos")]
public partial class Photos : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Class;
	
	private string _name;
	
	private string _datetime;
	
	private string _comment;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndatetimeChanging(string value);
    partial void OndatetimeChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
	
	public Photos()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_Class", DbType="Char(7) NOT NULL", CanBeNull=false)]
	public string Class
	{
		get
		{
			return this._Class;
		}
		set
		{
			if ((this._Class != value))
			{
				this.OnClassChanging(value);
				this.SendPropertyChanging();
				this._Class = value;
				this.SendPropertyChanged("Class");
				this.OnClassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string datetime
	{
		get
		{
			return this._datetime;
		}
		set
		{
			if ((this._datetime != value))
			{
				this.OndatetimeChanging(value);
				this.SendPropertyChanging();
				this._datetime = value;
				this.SendPropertyChanged("datetime");
				this.OndatetimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(MAX)")]
	public string comment
	{
		get
		{
			return this._comment;
		}
		set
		{
			if ((this._comment != value))
			{
				this.OncommentChanging(value);
				this.SendPropertyChanging();
				this._comment = value;
				this.SendPropertyChanged("comment");
				this.OncommentChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
